{"version":3,"sources":["Utils/localStorage.js","statemanagement/index.js","components/NotesList/styles.js","components/NotesList/Note.js","components/NotesList/index.js","components/NoteBooks/styles.js","components/NoteBooks/index.js","components/CreateNote/styles.js","components/CreateNote/index.js","Utils/Modal.js","Utils/ShowModal.js","components/MainComponent/styles.js","components/MainComponent/index.js","App.js","index.js"],"names":["LocalStorage","key","localStorage","getItem","value","setItem","removeItem","get","notebook","set","remove","notebok","id","getNotes","JSON","parse","object","List","length","filter","item","Notes","getNotebooks","getAllNotes","itemObject","updatedList","title","message","stringify","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","useReducer","useStateValue","useContext","notes","modal","edit","show","showModal","state","action","type","useNoteStyles","makeStyles","theme","paper","padding","spacing","color","palette","text","secondary","marginBottom","button","position","top","wordBreak","paddingBottom","useListStyles","root","flexGrow","margin","marginTop","textField","marginLeft","marginRight","formControl","width","moveToSelect","backgroundColor","Note","props","row","classes","useStyles","dispatch","Paper","className","Grid","container","Divider","variant","ButtonGroup","aria-label","Button","onClick","removeNote","note","rmNoteBook","NotesList","useState","mainData","setMainData","setState","filterNotes","DaysBefore","data","React","useEffect","Fragment","Typography","align","gutterBottom","noWrap","TextField","label","placeholder","fullWidth","onChange","e","event","target","searched","keyword","array","toSearch","toLowerCase","undefined","includes","searchFor","search","InputProps","endAdornment","InputAdornment","size","concat","sort","a","b","keyA","Date","updated_at","keyB","sortNewest","sortOldest","sevenDaysBefore","moment","subtract","format","sortByWeek","sortByMonth","sortByYear","map","index","noteBooksContainer","minHeight","noteBookList","cursor","active","NoteBooks","activeNote","setActiveNote","demo","dense","ListItem","join","All","showNotesOf","ListItemAvatar","Avatar","ListItemText","primary","display","flexWrap","menu","CreateNote","handleChange","name","getTime","toLocaleTimeString","hour12","multiline","rows","allNodes","allNodesObject","rowExists","push","setNotes","ModalBase","handleClose","findId","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","updateId","ShowModal","source","escapeHtml","MainComponent","xs","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.445c8d8c.chunk.js","sourcesContent":["const LocalStorage = {};\r\n\r\nLocalStorage.get = key => {\r\n  return localStorage.getItem(key);\r\n};\r\nLocalStorage.set = (key, value) => {\r\n  return localStorage.setItem(key, value);\r\n};\r\nLocalStorage.remove = key => {\r\n  return localStorage.removeItem(key);\r\n};\r\n/**\r\n * get all notes\r\n **/\r\nLocalStorage.getNotes = () => {\r\n  return LocalStorage.get(\"notes\");\r\n};\r\n\r\n/**\r\n * get all notes of notebooks\r\n **/\r\nLocalStorage.getNotebooks = notebook => {\r\n  return LocalStorage.get(notebook);\r\n};\r\n\r\n/**\r\n * set a group of Notes\r\n **/\r\nLocalStorage.setNotes = value => {\r\n  LocalStorage.set(\"notes\", value);\r\n};\r\n\r\n/**\r\n * remove Notes\r\n **/\r\nLocalStorage.rmNotes = () => {\r\n  LocalStorage.remove(\"notes\");\r\n};\r\n\r\n/**\r\n * remove Notes\r\n **/\r\nLocalStorage.rmNoteBook = notebok => {\r\n  LocalStorage.remove(notebok);\r\n};\r\n\r\n/**\r\n * get a note by index\r\n **/\r\nLocalStorage.note = id => {\r\n  if (LocalStorage.getNotes() !== null) {\r\n    const List = JSON.parse(LocalStorage.getNotes());\r\n    return List[id];\r\n  }\r\n  return [];\r\n};\r\n\r\n/**\r\n * check that note exists by id\r\n **/\r\nLocalStorage.rowExists = object => {\r\n  const List = JSON.parse(LocalStorage.getNotes());\r\n  if (List !== null && List.length > 0) {\r\n    return List.filter(item => {\r\n      return object.id === item.id;\r\n    });\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\n/**\r\n * check that note exists by id in specific notebook\r\n **/\r\nLocalStorage.rowExistsIn = (notebook, object) => {\r\n  const List = JSON.parse(localStorage.getItem(notebook));\r\n  if (List !== null && List.length > 0) {\r\n    return List.filter(item => {\r\n      return object.id === item.id;\r\n    });\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\nLocalStorage.getAllNotes = () => {\r\n  let Notes = LocalStorage.getNotebooks(\"notes\");\r\n  let All;\r\n  Notes = Notes !== null ? JSON.parse(Notes) : [];\r\n  All = [...Notes];\r\n\r\n  return All;\r\n};\r\n/**\r\n * get node by id\r\n **/\r\nLocalStorage.findId = id => {\r\n  const List = LocalStorage.getAllNotes();\r\n  if (List !== null && List.length > 0) {\r\n    return List.filter(item => {\r\n      return id === item.id;\r\n    });\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\n/**\r\n * update a note by id\r\n **/\r\nLocalStorage.updateId = (id, itemObject) => {\r\n  const List = JSON.parse(\r\n    LocalStorage.getNotebooks(\r\n      \"notes\"\r\n    )\r\n  );\r\n\r\n  if (List !== null && List.length > 0) {\r\n    const updatedList = List.filter(item => {\r\n      if (id === item.id) {\r\n        const { title, message } = itemObject;\r\n        item.title = title;\r\n        item.message = message;\r\n      }\r\n      return item;\r\n    });\r\n    LocalStorage.set(\r\n       \"notes\",\r\n      JSON.stringify(updatedList)\r\n    );\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default LocalStorage;\r\n","import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n\r\nexport const initialState = {\r\n  notes: [],\r\n  modal: false,\r\n  edit: null,\r\n  show: null,\r\n  showModal: false\r\n};\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"newNote\":\r\n      return {\r\n        ...state,\r\n        notes: action.notes\r\n      };\r\n    case \"openModal\":\r\n      return {\r\n        ...state,\r\n        modal: action.modal,\r\n        edit: action.edit\r\n      };\r\n    case \"showMessage\":\r\n      return {\r\n        ...state,\r\n        showModal: action.showModal,\r\n        show: action.show\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useNoteStyles = makeStyles(theme => ({\r\n  paper: {\r\n    padding: theme.spacing(2) * 2,\r\n    color: theme.palette.text.secondary,\r\n    marginBottom: 10\r\n  },\r\n  button: {\r\n    position: \"relative\",\r\n    top: \"10px\"\r\n  },\r\n  title: {\r\n    wordBreak: \"break-all\",\r\n    paddingBottom: 10\r\n  }\r\n}));\r\n\r\nexport const useListStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2) * 2,\r\n    color: theme.palette.text.secondary,\r\n    marginBottom: 10\r\n  },\r\n  margin: {\r\n    marginTop: 8\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(1) + \"px !important\",\r\n    marginBottom: theme.spacing(1) + \"px !important\",\r\n    width: \"100% !important\"\r\n  },\r\n  moveToSelect: {\r\n    backgroundColor: \"#ccc !important\",\r\n    color: \"#333 !important\"\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport LocalStorage from \"../../Utils/localStorage\";\r\nimport { useStateValue } from \"../../statemanagement\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useNoteStyles as useStyles } from \"./styles\";\r\n\r\nfunction Note(props) {\r\n  const { item, row } = props;\r\n  const { id, title} = item;\r\n  const classes = useStyles();\r\n  const [, dispatch] = useStateValue();\r\n\r\n  function deleteNote() {\r\n    let getObjectsOfTheNoteBook = JSON.parse(LocalStorage.getNotes());\r\n    \r\n    let removeNote = getObjectsOfTheNoteBook.filter(\r\n      note => note.id !== item.id\r\n    );\r\n    LocalStorage.rmNoteBook(\r\n      \"notes\"\r\n    );\r\n    LocalStorage.set(\r\n      \"notes\",\r\n      JSON.stringify(removeNote)\r\n    );\r\n\r\n    dispatch({ type: \"newNote\", notes: removeNote });\r\n  }\r\n\r\n  function updateNote() {\r\n    dispatch({ type: \"openModal\", modal: true, edit: id });\r\n  }\r\n\r\n  function showNote() {\r\n    dispatch({ type: \"showMessage\", showModal: true, show: id });\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Grid container>\r\n        <div className={title}>\r\n          {row + 1}- {title}\r\n        </div>\r\n      </Grid>\r\n      <Divider variant=\"middle\" />\r\n      <Grid container>\r\n        <ButtonGroup\r\n          color=\"primary\"\r\n          aria-label=\"outlined primary button group\"\r\n          className={classes.button}\r\n        >\r\n          <Button variant=\"outlined\" color=\"secondary\" onClick={deleteNote}>\r\n            Delete\r\n          </Button>\r\n          <Button variant=\"outlined\" color=\"primary\" onClick={updateNote}>\r\n            Update\r\n          </Button>\r\n          <Button variant=\"outlined\" color=\"primary\" onClick={showNote}>\r\n            Show\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Note;\r\n","import React, { useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Note from \"./Note\";\r\nimport { useStateValue } from \"../../statemanagement\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { useListStyles as useStyles } from \"./styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport moment from 'moment'\r\n\r\nfunction NotesList() {\r\n  const classes = useStyles();\r\n  const [{ notes }, dispatch] = useStateValue();\r\n  const [mainData, setMainData] = useState([]);\r\n  const [state, setState] = useState(\"\");\r\n\r\n  /**\r\n   * Find the object with complexicity O(n2)\r\n   **/\r\n  function searchFor(keyword, key, array) {\r\n    const toSearch = keyword.toLowerCase();\r\n    return array.filter(data => {\r\n      return data[key]!==undefined && data[key].toLowerCase().includes(toSearch)\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle Search in titles\r\n   **/\r\n  function search(event) {\r\n    const value = event.target.value;\r\n    setState(value);\r\n    const searched = searchFor(value, \"title\", notes);\r\n    if (searched.length > 0) {\r\n      setMainData(searched);\r\n    }\r\n    if (value.length === 0) {\r\n      setMainData(notes);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle sorting of notes from newest to oldest\r\n   */\r\n  function sortNewest(){\r\n    if(mainData.length > 0){\r\n      const data = [].concat(notes)\r\n      .sort(function(a, b) {\r\n        var keyA = new Date(a.updated_at),\r\n          keyB = new Date(b.updated_at);\r\n        if (keyA > keyB) return -1;\r\n        if (keyA < keyB) return 1;\r\n        return 0;\r\n      });\r\n        if(data.length > 0) setMainData(data);\r\n        else setMainData([]);\r\n    }\r\n  }\r\n  function sortOldest(){\r\n    if(mainData.length > 0){\r\n      const data = [].concat(notes)\r\n      .sort(function(a, b) {\r\n        var keyA = new Date(a.updated_at),\r\n          keyB = new Date(b.updated_at);\r\n        if (keyA < keyB) return -1;\r\n        if (keyA > keyB) return 1;\r\n        return 0;\r\n      });\r\n        if(data.length > 0) setMainData(data);\r\n        else setMainData([]);\r\n    }\r\n  }\r\n\r\n  function filterNotes(key,DaysBefore){\r\n    return notes.filter(data => {\r\n      return data[key] >= DaysBefore \r\n    })\r\n  }\r\n\r\n  function sortByWeek(){\r\n    var sevenDaysBefore = moment().subtract(7, 'days');\r\n    sevenDaysBefore = sevenDaysBefore.format(\"YYYY/MM/DD\");\r\n    var data = filterNotes(\"date\",sevenDaysBefore);\r\n    if(data.length > 0) setMainData(data);\r\n    else setMainData([]);\r\n  }\r\n\r\n  function sortByMonth(){\r\n    var DaysBefore = moment().subtract(30, 'days');\r\n    DaysBefore = DaysBefore.format(\"YYYY/MM/DD\");\r\n    var data = filterNotes(\"date\",DaysBefore);\r\n    if(data.length > 0) setMainData(data);\r\n    else setMainData([]);\r\n  }\r\n\r\n  function sortByYear(){\r\n    var DaysBefore = moment().subtract(365, 'days');\r\n    DaysBefore = DaysBefore.format(\"YYYY/MM/DD\");\r\n    var data = filterNotes(\"date\",DaysBefore);\r\n    if(data.length > 0) setMainData(data);\r\n    else setMainData([]);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setMainData(notes);\r\n  }, [notes]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography\r\n        variant=\"h5\"\r\n        align=\"center\"\r\n        color=\"primary\"\r\n        gutterBottom\r\n        noWrap\r\n      >\r\n        Notes\r\n      </Typography>\r\n\r\n      <TextField\r\n        value={state}\r\n        id=\"outlined-textarea\"\r\n        label=\"search\"\r\n        placeholder=\"search title of note\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={e => search(e)}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <SearchIcon />\r\n            </InputAdornment>\r\n          )\r\n        }}\r\n      />\r\n\r\n      <ButtonGroup\r\n        fullWidth\r\n        variant=\"text\"\r\n        color=\"secondary\"\r\n        size=\"large\"\r\n        aria-label=\"large contained secondary button group\"\r\n      >\r\n         <Button\r\n          color={\"primary\"}\r\n          onClick={() => sortNewest()}\r\n        >\r\n          Newest\r\n        </Button>\r\n        \r\n        <Button\r\n          color={\"primary\"}\r\n          onClick={() => sortOldest()}\r\n        >\r\n          Oldest\r\n        </Button>\r\n\r\n        <Button\r\n          color={\"primary\"}\r\n          onClick={() => sortByWeek()}\r\n        >\r\n          Week\r\n        </Button>\r\n        <Button\r\n          color={\"primary\"}\r\n          onClick={() => sortByMonth()}\r\n        >\r\n          Month\r\n        </Button>\r\n        <Button\r\n          color={\"primary\"}\r\n          onClick={() => sortByYear()}\r\n        >\r\n          Year\r\n        </Button>\r\n      </ButtonGroup>\r\n      <div className={classes.margin}>\r\n        {mainData.length > 0 &&\r\n          mainData.map((item, index) => (\r\n            <Note\r\n              row={index}\r\n              item={item}\r\n              key={item.id}\r\n            />\r\n          ))}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default NotesList;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useListStyles = makeStyles(theme => ({\r\n  noteBooksContainer: {\r\n    backgroundColor: \"#f6f6f6\",\r\n    minHeight: \"100%\"\r\n  },\r\n  noteBookList: {\r\n    cursor: \"pointer\"\r\n  },\r\n  active: {\r\n    backgroundColor: \"#ccc\"\r\n  }\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useStateValue } from \"../../statemanagement\";\r\nimport { useListStyles as useStyles } from \"./styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport LocalStorage from \"../../Utils/localStorage\";\r\n\r\nfunction NoteBooks() {\r\n  const classes = useStyles();\r\n  const [activeNote, setActiveNote] = useState(\"all\");\r\n  const [, dispatch] = useStateValue();\r\n  function showNotesOf() {\r\n    let Notes = LocalStorage.getNotebooks(\"notes\");\r\n    setActiveNote(\"all\");\r\n      let All;\r\n      Notes = Notes !== null ? JSON.parse(Notes) : [];\r\n      All = [...Notes];\r\n      if (All.length > 0) {\r\n        dispatch({ type: \"newNote\", notes: All });\r\n      }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography\r\n        variant=\"h5\"\r\n        align=\"center\"\r\n        color=\"primary\"\r\n        gutterBottom\r\n        noWrap\r\n      >\r\n        Note Books\r\n      </Typography>\r\n\r\n      <div className={classes.noteBooksContainer}>\r\n        <div className={classes.demo}>\r\n          <List dense={false}>\r\n            <ListItem\r\n              className={[\r\n                classes.noteBookList,\r\n                activeNote === \"all\" && classes.active\r\n              ].join(\" \")}\r\n              onClick={() => showNotesOf()}\r\n            >\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <FolderIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary=\"All\" />\r\n            </ListItem>\r\n          </List>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default NoteBooks;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  dense: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  menu: {\r\n    width: 200\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width: \"100%\"\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport LocalStorage from \"../../Utils/localStorage\";\r\nimport { useStateValue } from \"../../statemanagement\";\r\nimport { useStyles } from \"./styles\";\r\nimport moment from 'moment'\r\n\r\nfunction CreateNote() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    id: 0,\r\n    message: \"\",\r\n    title: \"\"\r\n  });\r\n  const [, dispatch] = useStateValue();\r\n\r\n  /**\r\n   * handle change inputs\r\n   **/\r\n  function handleChange(name, event) {\r\n    setState({\r\n      ...state,\r\n      [name]: event.target.value,\r\n      id: new Date().getTime(),\r\n      updated_at: new Date(),\r\n      date: moment().format(\"YYYY/MM/DD\"),\r\n      time: new Date().toLocaleTimeString('en-US', { hour12: false }),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add notes inside of localStorage and context api\r\n   **/\r\n  function addToNotes() {\r\n    //note book is not set, so set the Note in \"Note\" object\r\n      const allNodes = LocalStorage.getNotes();\r\n      let allNodesObject = allNodes !== null ? JSON.parse(allNodes) : [];\r\n      const rowExists = LocalStorage.rowExists(state);\r\n      if (rowExists.length === 0) {\r\n        if (allNodesObject.length === 0) {\r\n          allNodesObject = [state];\r\n        } else {\r\n          allNodesObject.push(state);\r\n        }\r\n        LocalStorage.setNotes(JSON.stringify(allNodesObject));\r\n        dispatch({\r\n          type: \"newNote\",\r\n          notes: allNodesObject\r\n        });\r\n      }\r\n  }\r\n\r\n  /**\r\n   * On component Did mount , send data from localStorage into context api\r\n   **/\r\n  React.useEffect(() => {\r\n    let All;\r\n    let Notes = LocalStorage.getNotebooks(\"notes\");\r\n\r\n    Notes = Notes !== null ? JSON.parse(Notes) : [];\r\n    All = [ ...Notes];\r\n    if (All.length > 0) {\r\n      dispatch({ type: \"newNote\", notes: All });\r\n    }\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography\r\n        variant=\"h5\"\r\n        align=\"center\"\r\n        color=\"primary\"\r\n        gutterBottom\r\n        noWrap\r\n      >\r\n        Add a new Note\r\n      </Typography>\r\n\r\n      <TextField\r\n        id=\"outlined-textarea\"\r\n        label=\"Title\"\r\n        placeholder=\"Write your title\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={e => handleChange(\"title\", e)}\r\n      />\r\n\r\n      <TextField\r\n        id=\"outlined-textarea\"\r\n        label=\"Write your Message\"\r\n        placeholder=\"Write your note\"\r\n        multiline\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n        onChange={e => handleChange(\"message\", e)}\r\n        rows={10}\r\n        fullWidth\r\n      />\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        onClick={addToNotes}\r\n      >\r\n        Add Note\r\n      </Button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CreateNote;\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { useStateValue } from \"../statemanagement\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LocalStorage from \"../Utils/localStorage\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  dense: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  menu: {\r\n    width: 200\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width: \"100%\"\r\n  }\r\n}));\r\n\r\nexport default function ModalBase() {\r\n  const [{ modal, edit }, dispatch] = useStateValue();\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    message: \"\",\r\n    title: \"\"\r\n  });\r\n\r\n  const handleClose = () => {\r\n    dispatch({ type: \"openModal\", modal: false });\r\n  };\r\n\r\n  function addToNotes() {\r\n    if (LocalStorage.updateId(edit, state)) {\r\n      dispatch({\r\n        type: \"newNote\",\r\n        notes: []\r\n      });\r\n      const allNodes = JSON.parse(\r\n        LocalStorage.getNotebooks(\r\n          \"notes\"\r\n        )\r\n      );\r\n\r\n      dispatch({\r\n        type: \"newNote\",\r\n        notes: allNodes\r\n      });\r\n      handleClose();\r\n    }\r\n  }\r\n\r\n  function handleChange(name, event) {\r\n    setState({\r\n      ...state,\r\n      [name]: event.target.value\r\n    });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (edit !== null) {\r\n      const rowExists = LocalStorage.findId(edit);\r\n      if (rowExists.length > 0) {\r\n        setState(rowExists[0]);\r\n      }\r\n    }\r\n  }, [edit]);\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      setState({ message: \"\", title: \"\" });\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={modal}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Edit Note</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            value={state !== undefined && state.title}\r\n            id=\"outlined-textarea\"\r\n            label=\"Title\"\r\n            placeholder=\"Write your title\"\r\n            className={classes.textField}\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={e => handleChange(\"title\", e)}\r\n          />\r\n          <TextField\r\n            value={state !== undefined && state.message}\r\n            id=\"outlined-textarea\"\r\n            label=\"Write your Message\"\r\n            placeholder=\"Write your note\"\r\n            multiline\r\n            className={classes.textField}\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            onChange={e => handleChange(\"message\", e)}\r\n            rows={10}\r\n            fullWidth\r\n          />\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            onClick={addToNotes}\r\n          >\r\n            Edit Note\r\n          </Button>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { useStateValue } from \"../statemanagement\";\r\nimport LocalStorage from \"../Utils/localStorage\";\r\nimport ReactMarkdown from \"react-markdown/with-html\";\r\n\r\nexport default function ShowModal() {\r\n  const [{ showModal, show }, dispatch] = useStateValue();\r\n  const [state, setState] = React.useState({\r\n    message: \"\",\r\n    title: \"\"\r\n  });\r\n\r\n  const handleClose = () => {\r\n    dispatch({ type: \"showMessage\", showModal: false });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const rowExists = LocalStorage.findId(show);\r\n    if (rowExists.length > 0) {\r\n      setState(rowExists[0]);\r\n    }\r\n  }, [show]);\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      setState({ message: \"\", title: \"\" });\r\n    };\r\n  }, [show]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {state !== undefined && (\r\n        <Dialog\r\n          fullWidth\r\n          open={showModal}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">{state.title}</DialogTitle>\r\n          <DialogContent>\r\n            <ReactMarkdown source={state.message} escapeHtml={false} />\r\n          </DialogContent>\r\n        </Dialog>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n    width: \"90%\",\r\n    margin: \"0 auto\",\r\n    marginTop: 100\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport NotesList from \"../NotesList\";\r\nimport NoteBooks from \"../NoteBooks\";\r\nimport CreateNote from \"../CreateNote\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { StateProvider, initialState, reducer } from \"../../statemanagement\";\r\nimport ModalBase from \"../../Utils/Modal\";\r\nimport ShowModal from \"../../Utils/ShowModal\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nfunction MainComponent() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Paper className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <StateProvider initialState={initialState} reducer={reducer}>\r\n            <React.Fragment>\r\n              <ModalBase />\r\n              <ShowModal />\r\n              <Grid item xs={2}>\r\n                <NoteBooks />\r\n              </Grid>\r\n              <Grid item xs={5}>\r\n                <NotesList />\r\n              </Grid>\r\n              <Grid item xs={5}>\r\n                <CreateNote />\r\n              </Grid>\r\n            </React.Fragment>\r\n          </StateProvider>\r\n        </Grid>\r\n      </Paper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default MainComponent;\r\n","import React from \"react\";\r\nimport MainComponent from \"./components/MainComponent\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <MainComponent />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n"],"sourceRoot":""}